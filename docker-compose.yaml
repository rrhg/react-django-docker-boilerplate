version: "3.0"
services:
  postgres:
    image: postgres:10
    restart: unless-stopped
    environment:
      - POSTGRES_USER=django
      - POSTGRES_PASSWORD=django
    ports:
      - '127.0.0.1:5432:5432'
#   redis:
    # image: redis:5
    # restart: unless-stopped
  backend:
    build: ./backend/
    command: python manage.py runserver 0.0.0.0:8000
    # command: bash -c "
            #  echo before runserver------------------- &&
            #  python manage.py runserver 0.0.0.0:8000 &&
            #  echo after runserver------------------ &&
            #  ./dev after_init_message"
    environment:
      # Postgres
      - POSTGRES_USER=django
      - POSTGRES_PASSWORD=django
      - POSTGRES_DB=django
      - POSTGRES_HOST=postgres
      - POSTGRES_TEST_DB=django_test
      # Superuser
      - SUPERUSER_USERNAME=Admin
      - SUPERUSER_EMAIL=admin@example.com
      - SUPERUSER_PASSWORD=password
    ports:
      # Map port 8000 in the container to port 8000 on the host
      # This way we can access the forum through http://localhost:8000
      - "8000:8000"
    depends_on:
      - postgres
    #   - redis
    tty: true
    volumes:
      # Map in the entire project into the container
      # This makes sure files in the container updates on the fly as we were working locally
      - ./backend:/backend:Z
      # allow to call ./dev init_in_docker from inside container
      - ./dev:/backend/dev:Z
#   celery:
    # build: .
    # command: celery -A devproject worker --loglevel=info
    # environment:
    #   # Postgres
    #   - POSTGRES_USER=django
    #   - POSTGRES_PASSWORD=django
    #   - POSTGRES_DB=django
    #   - POSTGRES_HOST=postgres
    #   - POSTGRES_TEST_DB=django_test
    # depends_on:
    #   - postgres
    #   - redis
    # tty: true
    # volumes:
    #   # Map in the entire project into the container
    #   # This makes sure files in the container updates on the fly as we were working locally
    #   - .:/backend:Z

# fix for: ERROR: could not find an available, non-overlapping IPv4 address pool among the defaults to assign to the network
# happens sometimes when your laptop vpn services use same addresses as docker network
# if this creates any type of error, just comment out everything. It will still work with the default network & default id addresses
networks:
    default:
        driver: bridge
        ipam:
            config:
                - subnet: 172.16.57.0/24