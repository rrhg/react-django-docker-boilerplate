{"version":3,"sources":["logo.svg","Context.js","components/Polls.js","components/About.js","components/CreateQuestion.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","Provider","props","origin","window","location","backendHost","value","children","Polls","useState","questions","setQuestions","useContext","Container","Jumbotron","to","className","Button","variant","onClick","event","preventDefault","stopPropagation","fetch","then","res","console","log","json","error","map","question","Card","Header","question_text","Body","Text","id","About","CreateQuestion","questionText","setQuestionText","response","setResponse","Form","onSubmit","objectToSend","method","headers","body","JSON","stringify","result","Group","Label","Control","onChange","e","target","type","placeholder","controlId","Check","label","App","path","Home","src","logo","alt","href","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4fe9180.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\"\n\nexport const Context = React.createContext()\n\nexport const Provider = (props) => {\n    const origin = window.location.origin\n    let backendHost = \"http://localhost:8000\"\n    if (origin !== \"http://localhost:3000\") {\n        backendHost = origin\n    }\n    let value = {\n        backendHost: backendHost,\n    }\n\n    return(\n        <Context.Provider value={value}>\n            {props.children}\n        </Context.Provider>\n    )\n}","import React from 'react'\nimport {Context} from '../Context'\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Card from 'react-bootstrap/Card';\nimport {Link} from \"react-router-dom\"\n\n\nconst Polls = props => {\n\n  const [questions, setQuestions] = React.useState([])\n\n  const context = React.useContext(Context)\n  const backendHost = context.backendHost\n\n  const onGetModels = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    fetch(backendHost + \"/api/polls/questions/\")\n      .then(res => {\n        console.log(res)\n        return( res.json())\n      })\n      .then(\n        (questions) => {\n          console.log(questions)\n          setQuestions(questions)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }\n\n  return (\n  <Container>\n    <Jumbotron>\n    <h2>Polls Demo APP</h2>\n    <h4>Create a new  <Link to=\"/create\">Question</Link></h4>\n    <h4>or</h4>\n    <h4 className=\"header\">\n     Get all Question by making a get request to /api/polls/questions endpoint\n    </h4>\n    <Button variant=\"primary\" onClick={onGetModels}>\n        Get\n    </Button>\n    {questions.map(question => (\n      <div key={question.id}>\n        <Card>\n          <Card.Header>{question.question_text}</Card.Header>\n          <Card.Body>\n            <Card.Text>\n              id = {question.id}\n            </Card.Text>\n            <Card.Text>\n              Supporting text\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <br />\n      </div>\n    ))}\n    </Jumbotron>\n  </Container>\n  )\n}\n\nexport default Polls","import React from 'react'\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\n\nconst About = props => {\n\n  return (\n  <Container>\n    <Jumbotron>\n    <h2>About</h2>\n    </Jumbotron>\n  </Container>\n  )\n}\n\nexport default About","import React from 'react'\nimport {Context} from '../Context'\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nconst CreateQuestion = props => {\n\n  const [questionText, setQuestionText] = React.useState(\"\")\n  const [response, setResponse] = React.useState({})\n\n  const context = React.useContext(Context)\n  const backendHost = context.backendHost\n\n  const onPostReq = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const objectToSend = {question_text:questionText}\n    fetch(backendHost + \"/api/polls/questions/\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(objectToSend)\n    })\n    .then(res => res.json())\n    .then(\n        (result) => {\n          setResponse(result)\n        },\n        (error) => {\n          console.log(error)\n        }\n    )\n  }\n\n  return (\n  <Container>\n    <Jumbotron>\n    <h2 className=\"header\">\n    ...Let's create a Question in Django backend by making a post request to /api/polls/questions endpoint\n    </h2>\n\n    <Form onSubmit={onPostReq}>\n    <Form.Group>\n    {/* <Form.Group controlId=\"formBasicEmail\"> */}\n        <Form.Label>Question Title</Form.Label>\n        <Form.Control onChange={(e)=>setQuestionText(e.target.value)} value={questionText} type=\"text\" placeholder=\"Enter questionText\" />\n        <Form.Text className=\"text-muted\">\n        Weird titles ar Ok\n        </Form.Text>\n    </Form.Group>\n    \n    <Form.Group>\n    {/* <Form.Group controlId=\"formBasicPassword\"> */}\n        <Form.Label>Object received in response </Form.Label>\n        <Form.Control onChange={(e)=>{}} value={JSON.stringify(response)} type=\"text\" />\n    </Form.Group>\n    <Form.Group controlId=\"formBasicCheckbox\">\n        <Form.Check type=\"checkbox\" label=\"Check me out\" />\n    </Form.Group>\n    <Button variant=\"primary\" type=\"submit\">\n        Submit\n    </Button>\n    </Form>\n    </Jumbotron>\n  </Container>\n  )\n}\n\nexport default CreateQuestion","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport logo from './logo.svg'\nimport {Provider} from './Context'\nimport Polls from './components/Polls'\nimport About from './components/About'\nimport CreateQuestion from './components/CreateQuestion'\nimport './App.css'\n\nexport default function App() {\n  return (\n  <Provider>\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Create-react-app inlcluded component</Link>\n            </li>\n            <li>\n              <Link to=\"/polls\">Polls Demo App</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About.. </Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/polls\">\n            <Polls />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/create\">\n            <CreateQuestion />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  </Provider>\n  );\n}\n\nfunction Home() {\n  // Create-react-app included component\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit.. <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}