{"version":3,"sources":["logo.svg","Context.js","components/GetDjangoSampleModel.js","components/CreateDjangoSampleModel.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","Provider","props","origin","window","location","backendHost","value","children","GetDjangoSampleModel","useState","models","setModels","useContext","Container","Jumbotron","className","Button","variant","onClick","event","preventDefault","stopPropagation","fetch","then","res","json","console","log","error","map","model","Card","Header","title","Body","Text","id","setTitle","response","setResponse","Form","onSubmit","objectToSend","method","headers","body","JSON","stringify","result","Group","Label","Control","onChange","e","target","type","placeholder","controlId","Check","label","App","to","path","CreateDjangoSampleModel","Home","src","logo","alt","href","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.202db9a7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\"\n\nexport const Context = React.createContext()\n\nexport const Provider = (props) => {\n    const origin = window.location.origin\n    let backendHost = \"http://localhost:8000\"\n    if (origin !== \"http://localhost:3000\") {\n        backendHost = origin\n    }\n    let value = {\n        backendHost: backendHost,\n    }\n\n    return(\n        <Context.Provider value={value}>\n            {props.children}\n        </Context.Provider>\n    )\n}","import React from 'react'\nimport {Context} from '../Context'\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Card from 'react-bootstrap/Card';\n\nconst GetDjangoSampleModel = props => {\n\n  const [models, setModels] = React.useState([])\n\n  const context = React.useContext(Context)\n  const backendHost = context.backendHost\n\n  const onGetModels = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    fetch(backendHost + \"/api/apimodel/\")\n      .then(res => res.json())\n      .then(\n        (models) => {\n          console.log(models)\n          setModels(models)\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n  }\n\n  return (\n  <Container>\n    <Jumbotron>\n    <h3 className=\"header\">\n    ..Let's get all Django Sample Models by making a get request to /api/apimodel endpoint\n    </h3>\n    <Button variant=\"primary\" onClick={onGetModels}>\n        Get\n    </Button>\n    {models.map(model => (\n      <div key={model.id}>\n        <Card>\n          <Card.Header>{model.title}</Card.Header>\n          <Card.Body>\n            <Card.Text>\n              id = {model.id}\n            </Card.Text>\n            <Card.Text>\n              Supporting text.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n        <br />\n      </div>\n    ))}\n    </Jumbotron>\n  </Container>\n  )\n}\n\nexport default GetDjangoSampleModel","import React from 'react'\nimport {Context} from '../Context'\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nconst GetDjangoSampleModel = props => {\n\n  const [title, setTitle] = React.useState(\"\")\n  const [response, setResponse] = React.useState({})\n\n  const context = React.useContext(Context)\n  const backendHost = context.backendHost\n\n  const onPostReq = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const objectToSend = {title:title}\n    fetch(backendHost + \"/api/apimodel/\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: JSON.stringify(objectToSend)\n    })\n    .then(res => res.json())\n    .then(\n        (result) => {\n          setResponse(result)\n        },\n        (error) => {\n          console.log(error)\n        }\n    )\n  }\n\n  return (\n  <Container>\n    <Jumbotron>\n    <h2 className=\"header\">\n    ...Let's create a SampleModel in Django backend by making a post request to /api/apimodel endpoint\n    </h2>\n\n    <Form onSubmit={onPostReq}>\n    <Form.Group>\n    {/* <Form.Group controlId=\"formBasicEmail\"> */}\n        <Form.Label>SampleModel Title</Form.Label>\n        <Form.Control onChange={(e)=>setTitle(e.target.value)} value={title} type=\"text\" placeholder=\"Enter title\" />\n        <Form.Text className=\"text-muted\">\n        Weird titles ar Ok\n        </Form.Text>\n    </Form.Group>\n    \n    <Form.Group>\n    {/* <Form.Group controlId=\"formBasicPassword\"> */}\n        <Form.Label>Object received in response </Form.Label>\n        <Form.Control onChange={(e)=>{}} value={JSON.stringify(response)} type=\"text\" />\n    </Form.Group>\n    <Form.Group controlId=\"formBasicCheckbox\">\n        <Form.Check type=\"checkbox\" label=\"Check me out\" />\n    </Form.Group>\n    <Button variant=\"primary\" type=\"submit\">\n        Submit\n    </Button>\n    </Form>\n    </Jumbotron>\n  </Container>\n  )\n}\n\nexport default GetDjangoSampleModel","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport logo from './logo.svg'\nimport {Provider} from './Context'\nimport GetDjangoSampleModel from './components/GetDjangoSampleModel'\nimport CreateDjangoSampleModel from './components/CreateDjangoSampleModel'\nimport './App.css'\n\nexport default function App() {\n  return (\n  <Provider>\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Create-react-app inlcluded component</Link>\n            </li>\n            <li>\n              <Link to=\"/get\">Get Django SampleModel</Link>\n            </li>\n            <li>\n              <Link to=\"/create\">Create Django SampleModel</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/get\">\n            <GetDjangoSampleModel />\n          </Route>\n          <Route path=\"/create\">\n            <CreateDjangoSampleModel />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  </Provider>\n  );\n}\n\nfunction Home() {\n  // Create-react-app included component\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit.. <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}